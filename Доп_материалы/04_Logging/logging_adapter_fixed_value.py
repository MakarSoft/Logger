# Создавание заданных пользователем атрибуты объектов класса LogRecord, используя класс LoggerAdapter

# у LogRecord есть несколько атрибутов. Разработчики могут выбрать наиболее важные атрибуты и использовать в форматировщике.
# Помимо этого, модуль logging также предоставляет возможность добавить в LogRecord определенные пользователем атрибуты.
# Один из способов сделать это — использовать LoggerAdapter.
# Когда вы создаете адаптер, вы передаете ему экземпляр логгера и свои атрибуты (в словаре).
# Этот класс предоставляет тот же интерфейс, что и класс Logger, поэтому вы все еще можете вызывать методы наподобие logger.info.
# Новый атрибут с фиксированным значением
# Если вы хотите иметь что-то вроде атрибута с фиксированным значением в журнальном сообщении, например имя приложения,
# то вы можете использовать стандартный класс LoggerAdapter и получать значение атрибута при создании логгера
# (вероятно, получать откуда-либо, чтобы затем передать конструктору).
# Не забывайте добавлять этот атрибут в форматировщик. Местоположение атрибута вы можете выбрать по своему усмотрению.
# В следующем коде я добавляю атрибут app, значение которого определяется, когда я создаю логгер.

import logging

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - [%(levelname)s] - %(app)s - %(name)s - (%(filename)s).%(funcName)s(%(lineno)d) - %(message)s",
)

logger = logging.getLogger(__name__)
logger = logging.LoggerAdapter(logger, {"app": "тестовое приложение"})

logger.info("Программа стартует")
logger.info("Программа завершила работу")
